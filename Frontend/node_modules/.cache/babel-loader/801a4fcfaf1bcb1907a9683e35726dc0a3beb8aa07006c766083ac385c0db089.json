{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ashok\\\\my-app\\\\src\\\\components\\\\App2.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport TextForm from \"./TextForm\";\nimport Nav from \"./Nav\";\nimport Alert from \"./Alert\";\nimport About from \"./About\";\n// import './App.css';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App2() {\n  _s();\n  const [mode, setmode] = useState('light');\n  const [btntext, setBtnText] = useState('Enable Light Mode');\n  const [alert, setalert] = useState('');\n  const showalert = (message, type) => {\n    setalert({\n      msg: message,\n      type: type\n    });\n  };\n  const togglemode = () => {\n    if (mode === 'light') {\n      setmode('dark');\n      document.body.style.background = 'grey';\n      setBtnText('Enable Light Mode');\n      showalert(\"Dark Mode is Enabled\");\n      document.title = \"AFSSY - Dark Mode\";\n      // setInterval(() => {\n      //     document.title = \"This is wonderful!!\"\n      // }, 2000);\n      // setInterval(() => {\n      //     document.title = \"download now\"\n      // }, 4000);\n    } else {\n      setmode('light');\n      document.body.style.background = 'white';\n      setBtnText('Enable Dark Mode');\n      showalert(\"Light Mode is Enabled\");\n      document.title = \"AFSSY - Light Mode\";\n    }\n  };\n  const toggleblue = () => {\n    if (mode === 'light') {\n      setmode('dark');\n      document.body.style.background = 'blue';\n      setBtnText('Enable Light Mode');\n      showalert(\"Dark Mode is Enabled\");\n      document.title = \"AFSSY - Blue Mode\";\n    } else {\n      setmode('light');\n      document.body.style.background = 'white';\n      setBtnText('Enable Dark Mode');\n      showalert(\"Light Mode is Enabled\");\n      document.title = \"AFSSY - Light Mode\";\n    }\n  };\n  const togglegreen = () => {\n    if (mode === 'light') {\n      setmode('dark');\n      document.body.style.background = 'green';\n      setBtnText('Enable Light Mode');\n      showalert(\"Dark Mode is Enabled\");\n      document.title = \"AFSSY - Green Mode\";\n    } else {\n      setmode('light');\n      document.body.style.background = 'white';\n      setBtnText('Enable Dark Mode');\n      showalert(\"Light Mode is Enabled\");\n      document.title = \"AFSSY - Light Mode\";\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {\n      mode: mode,\n      togglemode: togglemode,\n      toggleblue: toggleblue,\n      togglegreen: togglegreen,\n      setBtnText: btntext\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      alert: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(\"switch\", {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/about\",\n          children: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          children: /*#__PURE__*/_jsxDEV(TextForm, {\n            mode: mode,\n            heading: \"Enter Your Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n}\n_s(App2, \"0Of6aJ3freXy8Y8LAKotSMQXi+M=\");\n_c = App2;\nexport default App2;\nvar _c;\n$RefreshReg$(_c, \"App2\");","map":{"version":3,"names":["React","useState","TextForm","Nav","Alert","About","BrowserRouter","Router","Switch","Route","Link","jsxDEV","_jsxDEV","App2","_s","mode","setmode","btntext","setBtnText","alert","setalert","showalert","message","type","msg","togglemode","document","body","style","background","title","toggleblue","togglegreen","children","fileName","_jsxFileName","lineNumber","columnNumber","path","heading","_c","$RefreshReg$"],"sources":["C:/Users/ashok/my-app/src/components/App2.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport TextForm from \"./TextForm\";\r\nimport Nav from \"./Nav\";\r\nimport Alert from \"./Alert\";\r\nimport About from \"./About\";\r\n// import './App.css';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n} from \"react-router-dom\";\r\n\r\nfunction App2() {\r\n    const [mode, setmode] = useState('light');\r\n    const [btntext, setBtnText] = useState('Enable Light Mode')\r\n\r\n    const [alert, setalert] = useState('');\r\n\r\n    const showalert = (message, type) => {\r\n        setalert({\r\n            msg: message,\r\n            type: type\r\n        })\r\n    }\r\n\r\n    const togglemode = () => {\r\n        if (mode === 'light') {\r\n            setmode('dark');\r\n            document.body.style.background = 'grey';\r\n            setBtnText('Enable Light Mode')\r\n            showalert(\"Dark Mode is Enabled\")\r\n            document.title = \"AFSSY - Dark Mode\"\r\n            // setInterval(() => {\r\n            //     document.title = \"This is wonderful!!\"\r\n            // }, 2000);\r\n            // setInterval(() => {\r\n            //     document.title = \"download now\"\r\n            // }, 4000);\r\n\r\n        }\r\n        else {\r\n            setmode('light');\r\n            document.body.style.background = 'white';\r\n            setBtnText('Enable Dark Mode')\r\n            showalert(\"Light Mode is Enabled\")\r\n            document.title = \"AFSSY - Light Mode\"\r\n\r\n\r\n        }\r\n    }\r\n    const toggleblue = () => {\r\n        if (mode === 'light') {\r\n            setmode('dark');\r\n            document.body.style.background = 'blue';\r\n            setBtnText('Enable Light Mode')\r\n            showalert(\"Dark Mode is Enabled\")\r\n            document.title = \"AFSSY - Blue Mode\"\r\n\r\n\r\n        }\r\n        else {\r\n            setmode('light');\r\n            document.body.style.background = 'white';\r\n            setBtnText('Enable Dark Mode')\r\n            showalert(\"Light Mode is Enabled\")\r\n            document.title = \"AFSSY - Light Mode\"\r\n\r\n\r\n        }\r\n    }\r\n    const togglegreen = () => {\r\n        if (mode === 'light') {\r\n            setmode('dark');\r\n            document.body.style.background = 'green';\r\n            setBtnText('Enable Light Mode')\r\n            showalert(\"Dark Mode is Enabled\")\r\n            document.title = \"AFSSY - Green Mode\"\r\n\r\n\r\n        }\r\n        else {\r\n            setmode('light');\r\n            document.body.style.background = 'white';\r\n            setBtnText('Enable Dark Mode')\r\n            showalert(\"Light Mode is Enabled\")\r\n            document.title = \"AFSSY - Light Mode\"\r\n\r\n\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <Nav mode={mode} togglemode={togglemode} toggleblue={toggleblue} togglegreen={togglegreen} setBtnText={btntext} />\r\n            <Alert alert={alert} />\r\n            <Router>\r\n                <switch>\r\n                    <Route path=\"/about\">\r\n                        <About />\r\n                    </Route>\r\n                    <Route path=\"/\">\r\n                        <TextForm mode={mode} heading=\"Enter Your Text\" />\r\n                    </Route>\r\n                </switch>\r\n            </Router>\r\n            {/* <About /> */}\r\n        </div>\r\n\r\n\r\n\r\n    )\r\n}\r\nexport default App2;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}